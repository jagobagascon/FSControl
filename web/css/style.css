:root {
    --text-color: #eee;
    --text-color-inactive: #eee5;

    --indicator-color: #eee;
    --indicator-color-inactive: #eee1;
    
    --background-color: #111;
    --shadow-active: 0px -1px 0px 1px #0009 inset, 0px 0px 3px 0px #FFF9;
    --shadow-inactive: 0px -5px 0px 1px #0009 inset, 0px 4px 0px 0px #FFF0;
    --blue: #1e90ff;
    --white: #ffffff;
}


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    font-family: monospace;
    background-color: var(--background-color, #eee);
    width: 100%;
    color: var(--text-color, #eee);
}

button, .knob {
    color:  var(--text-color-inactive, #eee);
    background-color: var(--background-color);
    border-radius: 1rem;
    border: none;
    transition: all 150ms;
    transition-delay: box-shadow 200ms;
    box-shadow: var(--shadow-inactive);
}


button.active, .knob.active {
    box-shadow: var(--shadow-active);
    color: var(--text-color);
    text-shadow: 0px 0px 3px var(--text-color);
}

.indicator {
    transition: all 300ms;
    background-color: var(--indicator-color-inactive);
}

.active .indicator {
    transition-delay: 200ms;
    background-color: var(--indicator-color);
    box-shadow: 0px 0px 5px 0px var(--indicator-color);
}

button .indicator {
    width: 60%;
    margin-left: 20%;
    margin-top: 1rem;
    height: .5rem;
    border-radius: .25rem;
}

.active .knob {
    box-shadow: var(--shadow-active);
}

.knob-display {
    position: absolute;
    top: 0.5rem;
    white-space: nowrap;
    font-size: 0.7rem;
    display: inline-block;
    width: 100%;
    text-align: center;
    background: #111;
    border-radius: 1rem;
    line-height: 0.4rem;
    padding: 0.4rem 0;
    box-shadow: 0 0 0 1px var(--text-color-inactive);
    color: var(--text-color-inactive);
}

.knob-display > *{
    display: inline-block;
}
.active .knob-display {
    box-shadow: 0 0 0 1px var(--text-color);
}

.active .knob-display.current {
    color: var(--text-color);
}

/*********************
    Component Grid
/*********************/

.grid-container {
    display: grid;
    /* [1] Add some gap between rows and columns */
    grid-gap: .5em;
    /* [2] Make columns adjust according to the available viewport */
    grid-template-columns: repeat( auto-fill, minmax( 200px, 1fr ) );
    /* [3] Set the height for implicitly-created row track */
    grid-auto-rows: 225px;
}

.grid-container > * {
    position: relative;
    background-color: #222;
}
.row--2x { grid-row-end: span 2; }
.row--3x { grid-row-end: span 3; }
.row--4x { grid-row-end: span 4; }

.col--2x { grid-column-end: span 2; }
.col--3x { grid-column-end: span 3; }
.col--4x { grid-column-end: span 4; }

/* Grid on large screens */
@media only screen and (min-width: 1024px) {
    .grid-container {
        column-count: 6;
    }
}

/* Grid on medium-sized screens */
@media only screen and (max-width: 1023px) and (min-width: 768px) {
    .grid-container {
        column-count: 4;
    }
}

/* Grid on small screens */
@media only screen and (max-width: 767px) and (min-width: 540px) {
    .grid-container {
        column-count: 3;
    }
}


/* Grid on small screens */
@media only screen and (max-width: 539px) and (min-width: 300px) {
    .grid-container {
        column-count: 2;
    }
}