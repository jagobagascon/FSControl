:root {
    --text-color: #eee;
    --text-color-inactive: #eee5;

    --indicator-color: #eee;
    --indicator-color-inactive: #eee1;
    
    --background-color-light: #222;
    --background-color: #111;
    --background-color-dark: #070707;
    --shadow-active: 0px -1px 0px 1px var(--background-color-dark) inset, 0px 0px 3px 0px #FFF9;
    --shadow-inactive: 0px -5px 0px 1px var(--background-color-dark) inset, 0px 4px 0px 0px #FFF0;
    --blue: #1e90ff;
    --white: #ffffff;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    font-family: monospace;
    background-color: var(--background-color, #eee);
    width: 100%;
    color: var(--text-color, #eee);
}

#full-screen-button {
    position: absolute;
    top: 0;
    right: 0;
    padding: 0.5rem;
}

#full-screen-button > button {
    border: none;
    background-color: #666;
    border-radius: 999px;
    color: white;
    padding: 0.4rem;
    line-height: 0.8rem;
}

.panel-button, .knob {
    cursor: pointer;
    color:  var(--text-color-inactive, #eee);
    background-color: var(--background-color);
    border-radius: 1rem;
    border: none;
    transition: all 150ms;
    transition-delay: box-shadow 200ms;
    box-shadow: var(--shadow-inactive);
}


.panel-button.active, .knob.active {
    box-shadow: var(--shadow-active);
    color: var(--text-color);
    text-shadow: 0px 0px 3px var(--text-color);
}

.indicator {
    transition: all 300ms;
    background-color: var(--indicator-color-inactive);
}

.active .indicator {
    transition-delay: 200ms;
    background-color: var(--indicator-color);
    box-shadow: 0px 0px 5px 0px var(--indicator-color);
}

.panel-button .indicator {
    width: 60%;
    margin-left: 20%;
    margin-top: 1rem;
    height: .5rem;
    border-radius: .25rem;
}

.active .knob {
    box-shadow: var(--shadow-active);
}

.knob-display {
    position: absolute;
    top: 0.5rem;
    white-space: nowrap;
    font-size: 0.7rem;
    display: inline-block;
    width: 100%;
    text-align: center;
    background: #111;
    border-radius: 1rem;
    line-height: 0.4rem;
    padding: 0.4rem 0;
    box-shadow: 0 0 0 1px var(--text-color-inactive);
    color: var(--text-color-inactive);
}

.knob-display > *{
    display: inline-block;
}
.active .knob-display {
    box-shadow: 0 0 0 1px var(--text-color);
}

.active .knob-display.current {
    color: var(--text-color);
}

/*********************
    Component Grid
/*********************/

.grid-container {
    display: grid;
    /* [1] Add some gap between rows and columns */
    grid-gap: .5em;
    /* [2] Make columns adjust according to the available viewport */
    grid-template-columns: repeat( auto-fill, 225px );
    /* [3] Set the height for implicitly-created row track */
    grid-auto-rows: 225px;
}

.grid-container > * {
    position: relative;
    background-color: var(--background-color-light);
}
.row--2x { grid-row-end: span 2; }
.row--3x { grid-row-end: span 3; }
.row--4x { grid-row-end: span 4; }

.col--2x { grid-column-end: span 2; }
.col--3x { grid-column-end: span 3; }
.col--4x { grid-column-end: span 4; }



/* COMS */
.com-panel {
    height: 100%;
    float: left;
    padding: 10px;
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: 3rem 6.5rem auto
}

.com-name {
    cursor: pointer;
    text-align: center;
    background: var(--background-color-dark);
    border-radius: 1em;
    font-size: 1.2rem;
    padding: 0.5rem 0;
    margin-bottom: .5rem;
    box-shadow: 0px 0px 0px 3px var(--background-color) inset;
    color: var(--text-color-inactive);
}

.current .com-name {
    cursor: default;
    text-shadow: 0px 0px 3px var(--text-color);
    color: var(--text-color);
}

.com-value-container {
    cursor: ns-resize;
    text-align: center;
    color: var(--text-color-inactive);
    background: linear-gradient(0deg, transparent 50%, #0d47a155 50%);
    border-radius: 1em;
    font-size: 1.4rem;
    padding: 0.5rem 0;
    margin-bottom: 1rem;
    box-shadow: 0px 0px 0px 3px var(--background-color) inset;
    overflow: hidden;
}

.current .com-value-container {
    background: linear-gradient(0deg, transparent 50%, #0d47a1 50%);
}

.com-value {
    padding: .25rem;
}

.current .com-active {
    text-shadow: 0px 0px 3px var(--text-color);
    color: var(--text-color);
}

.com-controls {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 1.5rem;
}

/* TRIM CONTROL */
.trim-container {
    width: 100%;
    height: 100%;
    padding: 10px;
    position: relative;
}

.trim-wheel-canal {
    height: 100%;
    width: 3rem;
    background: linear-gradient(
        0deg, 
        var(--background-color-dark) 48%, 
        rgb(102, 102, 102) 48%, 
        rgb(102, 102, 102) 52%, 
        var(--background-color-dark) 52%);
    border-radius: .5rem;
    padding: 5px 5px;
    overflow: hidden;
}


.trim-wheel-degrees {
    position: absolute;
    width: auto;
    bottom: 2px;
    white-space: nowrap;
    font-size: 0.7rem;
    display: inline-block;
    text-align: center;
    background: #111;
    border-radius: 1rem;
    line-height: 0.4rem;
    padding: 0.4rem 0.5rem;

    box-shadow: 0 0 0 1px var(--text-color);
    color: var(--text-color);
}


.trim-wheel-container {
    height: 100%;
    padding: 5px 0;
    border-radius: .5rem;
    overflow: hidden;
}

.trim-wheel {
    position: relative;
    transform-style: preserve-3d;
    height: 100%;
}

.trim-wheel-cell {
    position: absolute;

    /*
        225px - containerPadding(10 * 2) - wheelPadding(10 * 2)
        == 185px => radius of 92.5px
     */
    --wheel-radius: 92px;
    /* 
        based on https://3dtransforms.desandro.com/carousel
        angle = 10 items => 360 / 10
        radius = (height/2) / tan(angle/2)
        height = radius * tan(angle/2) * 2
        92 * tan(36/2 deg) * 2 = 60
    */
    height: 16px;
    
    width: 100%;

    /* vertical center */
    top: 50%;
    margin-top: -8px;

}

.trim-wheel-cell:nth-child(odd) {
    background-color:var(--background-color-light);
}
.trim-wheel-cell:nth-child(even) {
    background-color:var(--background-color);
}

.trim-wheel-cell:nth-child(1)::after {
    background-color: white;
    box-shadow: 0 0 3px 0 white;
    width: 100%;
    height: 2px;
    content: " ";
    position: absolute;
    top: 50%;
    margin-top: -2px;
}

.trim-wheel-cell:nth-child( 1) { transform: rotateX(  0deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 2) { transform: rotateX( 10deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 3) { transform: rotateX( 20deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 4) { transform: rotateX( 30deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 5) { transform: rotateX( 40deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 6) { transform: rotateX( 50deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 7) { transform: rotateX( 60deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 8) { transform: rotateX( 70deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child( 9) { transform: rotateX( 80deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(10) { transform: rotateX( 90deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(11) { transform: rotateX(100deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(12) { transform: rotateX(110deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(13) { transform: rotateX(120deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(14) { transform: rotateX(130deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(15) { transform: rotateX(140deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(16) { transform: rotateX(150deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(17) { transform: rotateX(160deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(18) { transform: rotateX(170deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(19) { transform: rotateX(180deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(20) { transform: rotateX(190deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(21) { transform: rotateX(200deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(22) { transform: rotateX(210deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(23) { transform: rotateX(220deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(24) { transform: rotateX(230deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(25) { transform: rotateX(240deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(26) { transform: rotateX(250deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(27) { transform: rotateX(260deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(28) { transform: rotateX(270deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(29) { transform: rotateX(280deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(30) { transform: rotateX(290deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(31) { transform: rotateX(300deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(32) { transform: rotateX(310deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(33) { transform: rotateX(320deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(34) { transform: rotateX(330deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(35) { transform: rotateX(340deg) translateZ(var(--wheel-radius)); }
.trim-wheel-cell:nth-child(36) { transform: rotateX(350deg) translateZ(var(--wheel-radius)); }
